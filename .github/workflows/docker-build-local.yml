name: Build Docker Images (Local Test)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (optional, defaults to latest)'
        required: false
        default: 'latest'

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: cloudflare-turnstile-goat

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/jsreiroot/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=test-local

      - name: Build Docker image (local test)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container functionality
        run: |
          # 测试构建的镜像
          docker run -d --name test-container \
            -p 8080:59623 \
            -e FLASK_ENV=production \
            -e TURNSTILE_SITE_KEY=1x00000000000000000000AA \
            -e TURNSTILE_SECRET_KEY=1x0000000000000000000000000000000AA \
            ${{ env.REGISTRY_DOCKERHUB }}/jsreiroot/${{ env.IMAGE_NAME }}:test-local
          
          # 等待容器启动
          sleep 15
          
          # 测试健康检查
          curl -f http://localhost:8080/ || exit 1
          echo "✅ Health check passed"
          
          # 清理测试容器
          docker stop test-container
          docker rm test-container
          echo "✅ Local test completed successfully"

      - name: Generate test summary
        run: |
          echo "## 🐳 Local Docker Build Test Summary" 
          echo "### ✅ Test Results"
          echo "- Docker image built successfully"
          echo "- Container started and health check passed"
          echo "- Local test completed"
